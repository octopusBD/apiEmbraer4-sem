--drop das views
DROP VIEW VIEW_CADASTRO;
DROP VIEW VIEW_SAMPLE;
DROP VIEW VIEW_UPDATE_SAMPLE;
DROP VIEW VIEW_ESTATISTICA_DISPONIBILIDADE;
DROP VIEW VIEW_ESTATISTICA_QTD_BOLETIM;
DROP VIEW VIEW_ESTATISTICA_QTD_CONTIDO;
DROP VIEW VIEW_ESTATISTICA_STATUS;
DROP VIEW VIEW_STATUS_USUARIO;
DROP VIEW VIEW_STATUS_CHASSI;
DROP VIEW VIEW_PERMISSAO_USUARIO;
DROP VIEW VIEW_ITEM_CHASSI;

--criação das views
CREATE VIEW VIEW_CADASTRO AS
SELECT usu.NOME_USUARIO, cha.CHASSI, per.PERMISSAO, cad.ID_CADASTRO, usu.ID_USUARIO, cha.ID_CHASSI, per.ID_PERMISSAO
FROM CADASTRO cad
INNER JOIN USUARIO usu 
ON usu.ID_USUARIO = cad.ID_USUARIO
INNER JOIN CHASSI cha 
ON cha.ID_CHASSI = cad.ID_CHASSI
INNER JOIN PERMISSAO per 
ON per.ID_PERMISSAO = usu.ID_PERMISSAO;

CREATE VIEW VIEW_SAMPLE AS
SELECT sam.ID_SAMPLE, usu.ID_USUARIO, sam.ID_CHASSI, sam.ID_BOLETIM, usu.NOME_USUARIO, bol.BOLETIM, bol.ITEM, sam.STATUS_SAMPLE, cha.CHASSI, sam.ULT_USU_ALT, sam.DT_ULT_EDICAO, usu_alt.NOME_USUARIO as ULTIMO_USUARIO_ALTERADO
FROM SAMPLE sam
INNER JOIN CHASSI cha 
ON cha.ID_CHASSI = sam.ID_CHASSI
INNER JOIN BOLETIM bol 
ON bol.ID_BOLETIM = sam.ID_BOLETIM
INNER JOIN CADASTRO cad 
ON cad.ID_CHASSI = sam.ID_CHASSI
INNER JOIN USUARIO usu 
ON usu.ID_USUARIO = cad.ID_USUARIO
INNER JOIN USUARIO usu_alt 
ON usu_alt.ID_USUARIO = sam.ULT_USU_ALT;

CREATE VIEW VIEW_UPDATE_SAMPLE AS
SELECT 
ups.ID_UPDATE_SAMPLE,
ups.ID_CHASSI,
ups.ID_BOLETIM, 
bol.BOLETIM, 
ups.MENSAGEM, 
ups.ID_USUARIO_ALTERANTE,
usa.NOME_USUARIO AS NOME_USUARIO_ALTERANTE
FROM UPDATE_SAMPLE ups
INNER JOIN CHASSI cha 
ON ups.ID_CHASSI = cha.ID_CHASSI
INNER JOIN BOLETIM bol 
ON ups.ID_BOLETIM = bol.ID_BOLETIM
INNER JOIN USUARIO usa
ON ups.ID_USUARIO_ALTERANTE = usa.ID_USUARIO;

CREATE VIEW VIEW_ESTATISTICA_DISPONIBILIDADE AS
SELECT ROWNUM as id, cha.CHASSI, res.* FROM (
    SELECT DISTINCT tot.* FROM (

        SELECT  c.ID_CHASSI, 
                c.ID_USUARIO,
                i.ITEM,
                CASE 
                    WHEN ch.ITEM IS NOT NULL 
                    THEN 'CONTIDO' 
                    ELSE 'NÃO CONTIDO' 
                END AS STATUS
        FROM (
                SELECT DISTINCT ITEM, ID_CHASSI, ID_USUARIO FROM VIEW_SAMPLE
            ) c

        CROSS JOIN (
                    SELECT DISTINCT ITEM FROM BOLETIM
                ) i

        LEFT JOIN (
                    SELECT DISTINCT ITEM, ID_CHASSI FROM VIEW_SAMPLE
                ) ch 
        ON ch.ID_CHASSI = c.ID_CHASSI 
        AND ch.ITEM = i.ITEM
    )tot
    ORDER BY tot.ID_USUARIO, tot.ID_CHASSI, tot.STATUS, tot.ITEM ASC    
)res
INNER JOIN CHASSI cha 
ON cha.ID_CHASSI = res.ID_CHASSI; 


CREATE VIEW VIEW_ESTATISTICA_QTD_BOLETIM AS
SELECT ROWNUM as ID_QTD_BOLETIM, tot.* FROM (
SELECT sem.ID_CHASSI, cha.CHASSI, COUNT(sem.ID_CHASSI) AS QTD_BOLETINS  
FROM SAMPLE sem
INNER JOIN CHASSI cha 
ON cha.ID_CHASSI = sem.ID_CHASSI
GROUP BY sem.ID_CHASSI, cha.CHASSI
ORDER BY sem.ID_CHASSI,  cha.CHASSI
)tot;

CREATE VIEW VIEW_ESTATISTICA_QTD_CONTIDO AS
SELECT ROWNUM as ID_QTD_CONTIDO, tot.* FROM (
SELECT res.ID_CHASSI, 
        cha.CHASSI, 
        res.STATUS, 
        COUNT(res.STATUS) AS QTD_CONTIDO  
FROM (
    SELECT DISTINCT ID_CHASSI, ITEM, STATUS FROM VIEW_ESTATISTICA_DISPONIBILIDADE
    ORDER BY ID_CHASSI, STATUS, ITEM
)res
INNER JOIN CHASSI cha 
ON cha.ID_CHASSI = res.ID_CHASSI
GROUP BY res.ID_CHASSI, cha.CHASSI, res.STATUS
ORDER BY res.ID_CHASSI, cha.CHASSI, res.STATUS
)tot;

CREATE VIEW VIEW_ESTATISTICA_STATUS AS
SELECT  ROWNUM as ID_ESTATISTICA, res.* FROM (
    SELECT vv.ID_USUARIO, 
            vv.ID_CHASSI, 
            usu.NOME_USUARIO,
            cha.CHASSI,
            vv.STATUS_SAMPLE, 
            vv.ITEM 
    FROM VIEW_SAMPLE vv
    INNER JOIN USUARIO usu 
    ON usu.ID_USUARIO = vv.ID_USUARIO
    INNER JOIN CHASSI cha 
    ON cha.ID_CHASSI = vv.ID_CHASSI
)res
ORDER BY res.ID_USUARIO, res.ID_CHASSI, res.STATUS_SAMPLE, res.ITEM;                             

CREATE VIEW VIEW_STATUS_USUARIO AS
SELECT 
    U.NOME_USUARIO, 
    COUNT(CASE WHEN S.STATUS_SAMPLE = 'INCORPORATED' THEN 1 END) AS Incorporated,
    COUNT(CASE WHEN S.STATUS_SAMPLE = 'NOT INCORPORATED' THEN 1 END) AS Not_Incorporated,
    COUNT(CASE WHEN S.STATUS_SAMPLE = 'NOT APPLICABLE' THEN 1 END) AS Not_Applicable
FROM 
    USUARIO U
    INNER JOIN CADASTRO C ON U.ID_USUARIO = C.ID_USUARIO
    INNER JOIN SAMPLE S ON C.ID_CHASSI = S.ID_CHASSI
GROUP BY 
    U.NOME_USUARIO;

CREATE VIEW VIEW_STATUS_CHASSI AS
SELECT 
    c.CHASSI,
    SUM(CASE WHEN s.STATUS_SAMPLE = 'INCORPORATED' THEN 1 ELSE 0 END) as Incorporated,
    SUM(CASE WHEN s.STATUS_SAMPLE = 'NOT INCORPORATED' THEN 1 ELSE 0 END) as Not_Incorporated,
    SUM(CASE WHEN s.STATUS_SAMPLE = 'NOT APPLICABLE' THEN 1 ELSE 0 END) as Not_Applicable
FROM SAMPLE s
INNER JOIN CHASSI c ON s.ID_CHASSI = c.ID_CHASSI
GROUP BY c.CHASSI;

CREATE VIEW VIEW_PERMISSAO_USUARIO AS
SELECT 
    COUNT(CASE WHEN ID_PERMISSAO = 1 THEN 1 ELSE NULL END) AS Administrador,
    COUNT(CASE WHEN ID_PERMISSAO = 2 THEN 1 ELSE NULL END) AS Editor,
    COUNT(CASE WHEN ID_PERMISSAO = 3 THEN 1 ELSE NULL END) AS Consultor
FROM USUARIO;

CREATE VIEW VIEW_ITEM_CHASSI AS
SELECT b.ITEM, COUNT(*) AS QUANTIDADE
FROM SAMPLE s
JOIN BOLETIM b ON s.ID_BOLETIM = b.ID_BOLETIM
JOIN CHASSI c ON s.ID_CHASSI = c.ID_CHASSI
GROUP BY b.ITEM;
